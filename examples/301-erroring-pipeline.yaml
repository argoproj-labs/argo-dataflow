apiVersion: dataflow.argoproj.io/v1alpha1
kind: Pipeline
metadata:
  annotations:
    dataflow.argoproj.io/description: This example showcases retry policies.
    dataflow.argoproj.io/owner: argoproj-labs
    dataflow.argoproj.io/wait-for: RecentErrors
  name: 301-erroring
spec:
  steps:
  - handler:
      code: |
        def handler(msg, context):
            import random
            if random.randint(0, 4) == 1:
                raise Exception("random error")
            return msg
      runtime: python3-9
    name: always
    sinks:
    - log: {}
    sources:
    - cron:
        schedule: '*/3 * * * * *'
      retry:
        steps: 99999999
  - handler:
      code: |
        def handler(msg, context):
            import random
            if random.randint(0, 4) == 1:
                raise Exception("random error")
            return msg
      runtime: python3-9
    name: never
    sinks:
    - log: {}
    sources:
    - cron:
        schedule: '*/3 * * * * *'
      retry:
        steps: 0
