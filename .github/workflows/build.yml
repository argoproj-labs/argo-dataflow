name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - uses: actions/cache@v2
        with:
          path: /home/runner/.cache/go-build
          key: GOCACHE-v2-${{ hashFiles('**/go.mod') }}
      - uses: actions/cache@v2
        with:
          path: /home/runner/go/pkg/mod
          key: GOMODCACHE-v2-${{ hashFiles('**/go.mod') }}
      - run: make kubebuilder name=linux
      - run: go mod download
      - run: make test
      - run: bash <(curl -s https://codecov.io/bash)

  codegen:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - uses: actions/cache@v2
        with:
          path: /home/runner/.cache/go-build
          key: GOCACHE-v2-${{ hashFiles('**/go.mod') }}
      - uses: actions/cache@v2
        with:
          path: /home/runner/go/pkg/mod
          key: GOMODCACHE-v2-${{ hashFiles('**/go.mod') }}
      - run: sudo apt install -y protobuf-compiler
      - run: make codegen
      - run: git diff --exit-code

  lint:
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - uses: actions/checkout@v2
      - uses: golangci/golangci-lint-action@v2
        with:
          version: v1.42.0
          args: --verbose
      - run: git diff --exit-code

  # it = integration test
  it:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        suite:
          - db-e2e
          - e2e
          - examples
          - http-fmea
          - http-stress
          - hpa
          - kafka-e2e
          - kafka-fmea
          - kafka-stress
          - s3-e2e
          - stan-e2e
          - stan-fmea
          - stan-stress
    env:
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Install and start K3S
        timeout-minutes: 3
        run: |
          curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.21.2+k3s1 INSTALL_K3S_CHANNEL=stable INSTALL_K3S_EXEC=--docker K3S_KUBECONFIG_MODE=644 sh -
          until kubectl cluster-info ; do sleep 10s ; done
      - uses: actions/setup-go@v2
        with:
          go-version: "1.16"
      - uses: actions/cache@v2
        with:
          path: /home/runner/.cache/go-build
          key: GOCACHE-v2-${{ hashFiles('**/go.mod') }}
      - uses: actions/cache@v2
        with:
          path: /home/runner/go/pkg/mod
          key: GOMODCACHE-v2-${{ hashFiles('**/go.mod') }}
      - run: make controller
      - run: make testapi
      - run: make deploy CONFIG=ci
      - run: make runner
      - run: make runtimes
        if: ${{matrix.suite == 'e2e' || matrix.suite == 'examples'}}
      - run: docker pull golang:1.16
      - run: make wait
      - run: make test-${{matrix.suite}}
      - run: git diff
      - name: controller logs
        if: ${{ failure() }}
        run: kubectl -n argo-dataflow-system logs deploy/controller-manager -c manager
